# This file is a template, and might need editing before it works on your project.
# Official docker image.

image: docker:latest

services:
  - docker:dind

stages:
  - build
  - release
  - deploy

variables:
  IMAGE_NAME: frontend
  IMAGE_BUILD_TAG:       $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHA
  IMAGE_RELEASE_TAG:     $CI_REGISTRY_IMAGE/$IMAGE_NAME:latest
  IMAGE_RELEASE_TAG_DEV: $CI_REGISTRY_IMAGE/$IMAGE_NAME:latest-dev
  IMAGE_RELEASE_DOCKERHUB_TAG:     meetznow/$IMAGE_NAME:latest
  IMAGE_RELEASE_DOCKERHUB_TAG_DEV: meetznow/$IMAGE_NAME:latest-dev

# BUILD ----------------------------------------------------------------------------------------------------------------

build:
  stage: build
  before_script:
    - echo "Building -> $IMAGE_BUILD_TAG"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$IMAGE_BUILD_TAG" -f Dockerfile .
    - docker push "$IMAGE_BUILD_TAG"

# TODO TEST ------------------------------------------------------------------------------------------------------------




# RELEASE --------------------------------------------------------------------------------------------------------------

release:docker-master:
  stage: release
  only:
  - master
  before_script:
  - echo "Building -> $IMAGE_RELEASE_DOCKERHUB_TAG"
  - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
  - docker pull "$IMAGE_BUILD_TAG"
  - docker tag  "$IMAGE_BUILD_TAG" "$IMAGE_RELEASE_DOCKERHUB_TAG"
  - docker push "$IMAGE_RELEASE_DOCKERHUB_TAG"

release:docker-dev:
  stage: release
  only:
  - dev
  before_script:
    - echo "Building -> $IMAGE_RELEASE_DOCKERHUB_TAG_DEV"
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull "$IMAGE_BUILD_TAG"
    - docker tag  "$IMAGE_BUILD_TAG" "$IMAGE_RELEASE_DOCKERHUB_TAG_DEV"
    - docker push "$IMAGE_RELEASE_DOCKERHUB_TAG_DEV"

# DEPLOY ---------------------------------------------------------------------------------------------------------------

deploy:
  stage: deploy
  image: gitlab/dind:latest
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh
    - echo "$MEETZNOW_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DOCKER_MASTER >> ~/.ssh/known_hosts
  script:
    - ssh ubuntu@$DOCKER_MASTER "sudo docker stack deploy --with-registry-auth --prune --resolve-image always --compose-file docker-compose.yml meetznow;"
  only:
    - master
    - dev